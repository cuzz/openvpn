# Automatically generated by OpenVPN Windows build system

# This makefile builds the user-mode component of OpenVPN for Windows in the 
# Visual Studio 2008 environment. Note that this file is basis for the real 
# makefile (..\msvc.mak) but unusable as is. The real makefile is automatically 
# generated during the build process by the Python build scripts.
#
# A few details are in order:
#
# - Everything between @<< and << is inserted into a s.c. "in-line file". This 
#   file drives the linker (link.exe).
# - HEADERS_OBJS is expanded to all all header and source files listed in
#  ..\Makefile.am
# - OPENSSL_DIR and LZO_DIR are dynamically created from settings.in

OPENSSL = ../../../../openssl-1.0.2n
OPENSSL_DYNAMIC = libeay32.lib ssleay32.lib

PKCS11_HELPER = ../../../../pkcs11-helper-1.22

LZO = ../../../../lzo-2.10
LZO_DYNAMIC = lzo2.lib

INCLUDE_DIRS = -I$(OPENSSL)/include -I$(LZO)/include -I$(PKCS11_HELPER)/include -I../../ -I../../include -I ../compat -I../../../tap-windows6-master/include

LIBS = $(OPENSSL_DYNAMIC) $(PKCS11_HELPER_DYNAMIC) $(LZO_DYNAMIC) ws2_32.lib crypt32.lib iphlpapi.lib winmm.lib user32.lib gdi32.lib advapi32.lib wininet.lib bufferoverflowU.lib

LIB_DIRS = -LIBPATH:$(OPENSSL)\lib -LIBPATH:$(PKCS11_HELPER)\lib -LIBPATH:$(LZO)\lib

EXE = openvpn.exe

CPP=cl.exe
CPP_ARG_COMMON=/nologo /W3 -DWIN32 -DWIN32_LEAN_AND_MEAN -D_CONSOLE -D_MBCS $(INCLUDE_DIRS) /FD /c

LINK32=link.exe

# release:
CPP_PROJ=$(CPP_ARG_COMMON) /O2 /MD -DNDEBUG
LINK32_FLAGS=/nologo /subsystem:console /incremental:no /NODEFAULTLIB:libcmt.lib

# HEADERS and OBJS definitions, automatically generated from ../Makefile.am
HEADERS = \
	..\compat\compat-versionhelpers.h  \
	..\compat\compat.h  \
	base64.h \
	basic.h \
	buffer.h \
	circ_list.h \
	clinat.h \
	common.h \
	console.h \
	crypto.h \
	crypto_backend.h \
	crypto_openssl.h \
	cryptoapi.h \
	dhcp.h \
	errlevel.h \
	error.h \
	event.h \
	fdmisc.h \
	forward-inline.h \
	forward.h \
	fragment.h \
	gremlin.h \
	helper.h \
	httpdigest.h \
	init.h \
	integer.h \
	interval.h \
	list.h \
	lladdr.h \
	lzo.h \
	manage.h \
	mbuf.h \
	memdbg.h \
	misc.h \
	mroute.h \
	mss.h \
	mstats.h \
	mtcp.h \
	mtu.h \
	mudp.h \
	multi.h \
	ntlm.h \
	occ-inline.h \
	occ.h \
	openvpn.h \
	options.h \
	otime.h \
	packet_id.h \
	perf.h \
	pf-inline.h \
	pf.h \
	ping-inline.h \
	ping.h \
	pkcs11.h \
	pkcs11_backend.h \
	platform.h \
	plugin.h \
	pool.h \
	proto.h \
	proxy.h \
	ps.h \
	push.h \
	pushlist.h \
	reliable.h \
	route.h \
	schedule.h \
	session_id.h \
	shaper.h \
	sig.h \
	socket.h \
	socks.h \
	ssl.h \
	ssl_backend.h \
	ssl_common.h \
	ssl_openssl.h \
	ssl_verify.h \
	ssl_verify_backend.h \
	ssl_verify_openssl.h \
	status.h \
	syshead.h \
	tun.h \
	win32.h

COMPAT_FILES = \
	..\compat\compat-basename.c  \
	..\compat\compat-dirname.c  \
	..\compat\compat-gettimeofday.c  \
	..\compat\compat-inet_ntop.c  \
	..\compat\compat-inet_pton.c  \
	..\compat\compat-daemon.c

COMPAT_OBJS = \
	compat-basename.obj  \
	compat-dirname.obj  \
	compat-gettimeofday.obj  \
	compat-inet_ntop.obj  \
	compat-inet_pton.obj  \
	compat-daemon.obj

OBJS = \
	base64.obj \
	buffer.obj \
	clinat.obj \
	console.obj \
	crypto.obj \
	crypto_openssl.obj \
	cryptoapi.obj \
	dhcp.obj \
	error.obj \
	event.obj \
	fdmisc.obj \
	forward.obj \
	fragment.obj \
	gremlin.obj \
	helper.obj \
	httpdigest.obj \
	init.obj \
	interval.obj \
	list.obj \
	lladdr.obj \
	lzo.obj \
	manage.obj \
	mbuf.obj \
	misc.obj \
	mroute.obj \
	mss.obj \
	mstats.obj \
	mtcp.obj \
	mtu.obj \
	mudp.obj \
	multi.obj \
	ntlm.obj \
	occ.obj \
	openvpn.obj \
	options.obj \
	otime.obj \
	packet_id.obj \
	perf.obj \
	pf.obj \
	ping.obj \
	pkcs11.obj \
	pkcs11_openssl.obj \
	platform.obj \
	plugin.obj \
	pool.obj \
	proto.obj \
	proxy.obj \
	ps.obj \
	push.obj \
	reliable.obj \
	route.obj \
	schedule.obj \
	session_id.obj \
	shaper.obj \
	sig.obj \
	socket.obj \
	socks.obj \
	ssl.obj \
	ssl_openssl.obj \
	ssl_verify.obj \
	ssl_verify_openssl.obj \
	status.obj \
	tun.obj \
	win32.obj


openvpn : $(compat) $(OBJS)
	$(LINK32) @<<
	$(LINK32_FLAGS) "/out:$(EXE)" $(LIB_DIRS) $(LIBS) $(OBJS) compat.lib
<<

clean :
	del /Q $(OBJS) $(COMPAT_OBJS) $(EXE) *.idb *.pdb

compat:
   $(CC) /c  $(CPP_PROJ) $(COMPAT_FILES)
   lib /out:compat.lib $(COMPAT_OBJS)

.c.obj::
   $(CPP) @<<
   $(CPP_PROJ) $<
<<
